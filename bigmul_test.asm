; Tests 256 x 256 bit = 512 bit integer multiplication
; In: XVALUE, YVALUE: little-endian 256 bit multiplicands, EXPECT: little-endian 512 bit expected product
; Out: B length of erroneous suffix (MSB) of the product
	ORG	0x8000
START:	LD	HL,PRODUCT
	EXX
	PUSH	HL
	LD	HL,XVALUE
	LD	DE,YVALUE
	LD	B,0x20
	CALL	BIGMUL
	POP	HL
	EXX
	LD	DE,EXPECT + 0x40
	LD	BC,0x4000
CHECK:	DEC	DE
	DEC	HL
	LD	A,(DE)
	CP	(HL)
	RET	NZ
	DJNZ	CHECK
	RET
	INCLUDE "bigmul.asm"
	INCLUDE "mul8bit.asm"
XVALUE:
YVALUE:
ALLFF:	DEFB	0xFF, 0xFF, 0xFF, 0xFF
	DEFB	0xFF, 0xFF, 0xFF, 0xFF
	DEFB	0xFF, 0xFF, 0xFF, 0xFF
	DEFB	0xFF, 0xFF, 0xFF, 0xFF
	DEFB	0xFF, 0xFF, 0xFF, 0xFF
	DEFB	0xFF, 0xFF, 0xFF, 0xFF
	DEFB	0xFF, 0xFF, 0xFF, 0xFF
	DEFB	0xFF, 0xFF, 0xFF, 0xFF
EXPECT:	DEFB	0x01, 0x00, 0x00, 0x00
	DEFB	0x00, 0x00, 0x00, 0x00
	DEFB	0x00, 0x00, 0x00, 0x00
	DEFB	0x00, 0x00, 0x00, 0x00
	DEFB	0x00, 0x00, 0x00, 0x00
	DEFB	0x00, 0x00, 0x00, 0x00
	DEFB	0x00, 0x00, 0x00, 0x00
	DEFB	0x00, 0x00, 0x00, 0x00
	DEFB	0xFE, 0xFF, 0xFF, 0xFF
	DEFB	0xFF, 0xFF, 0xFF, 0xFF
	DEFB	0xFF, 0xFF, 0xFF, 0xFF
	DEFB	0xFF, 0xFF, 0xFF, 0xFF
	DEFB	0xFF, 0xFF, 0xFF, 0xFF
	DEFB	0xFF, 0xFF, 0xFF, 0xFF
	DEFB	0xFF, 0xFF, 0xFF, 0xFF
	DEFB	0xFF, 0xFF, 0xFF, 0xFF
PRODUCT:EQU	ALLFF + 0x100
